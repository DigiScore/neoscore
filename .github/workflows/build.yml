name: Build neoscore

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install neoscore
        run: poetry install --no-interaction
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      # - name: Run tests
      #   run: |
      #     source .venv/bin/activate
      #     pytest -n auto
      #   env:
      #     NEOSCORE_HEADLESS: True
      # - name: Check formatting conforms to Black
      #   uses: psf/black@stable
      # - name: Check import sorting with isort
      #   uses: isort/isort-action@master
      # - name: Check for unused imports with unimport
      #   run: |
      #     source .venv/bin/activate
      #     pip install unimport
      #     unimport --check --exclude "neoscore/common.py|.venv"
      - name: Build docs site
        working-directory: doc
        run: |
          poetry shell
          make html
      - name: Deploy docs site
        if: github.ref == 'refs/heads/doc-build-testing'
        working-directory: doc
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        run:
          netlify deploy --dir=_build/html --prod